/* 
 * Copyright 2015 Patrik Karlsson.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package se.trixon.jotaclient.ui;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
public class ProgressPanel extends javax.swing.JPanel {
//public class ProgressPanel extends javax.swing.JPanel implements Launcher.LauncherListener {

    /**
     * Creates new form ProgressPanel
     */
    public ProgressPanel() {
        initComponents();
        progressBar.setValue(100);
    }

//    @Override
//    synchronized public void launcherLog(String string) {
//        textArea.append(string + "\n");
//    }
//
//    @Override
//    public void onLauncherFinished(int exitValue, boolean destroyedByUser) {
////        progressBar.setIndeterminate(false);
//        if (exitValue == 0) {
////            launcherLog("Finished successfully");
////            Message.information(mToolName, "Finished successfully");
//        } else if (destroyedByUser) {
////            launcherLog("Aborted by user");
////            Message.warning(mToolName, "Aborted by user");
//        } else {
////            launcherLog("Finished  with exit value=" + getErrorCode(exitValue));
////            Message.error(mToolName, String.format("Exited with: %s", getErrorCode(exitValue)));
//        }
//    }
//
//    @Override
//    synchronized public void onLauncherMessage(String message, Launcher.Mode mode) {
//        if (mode == Launcher.Mode.STD) {
//            launcherLog(message);
//        } else {
//            launcherLog("*** " + message + " ***");
//        }
//    }
    public void reset() {
        progressBar.setIndeterminate(true);
//        textArea.setText("");
    }

    public void setProgressString(String string) {
        progressBar.setString(string);
    }

    public void stop() {
        progressBar.setIndeterminate(false);
    }

//    private String getErrorCode(int exitValue) {
//        String key = String.valueOf(exitValue);
//        return mExitValueBundle.containsKey(key) ? mExitValueBundle.getString(key) : String.format(("System code: %s"), key);
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressBar = new javax.swing.JProgressBar();
        logPanel = new se.trixon.util.swing.LogPanel();

        progressBar.setIndeterminate(true);
        progressBar.setString("sync");
        progressBar.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private se.trixon.util.swing.LogPanel logPanel;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
