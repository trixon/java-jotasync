/* 
 * Copyright 2016 Patrik Karlsson.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package se.trixon.jota.client.ui;

import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import se.trixon.jota.shared.ServerCommander;
import se.trixon.jota.client.Manager;
import se.trixon.jota.client.ClientOptions;
import se.trixon.util.dictionary.Dict;
import se.trixon.util.swing.SwingHelper;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
public class OptionsPanel extends javax.swing.JPanel {
    
    private final Manager mManager = Manager.getInstance();
    private final ServerCommander mServerCommander;
    private final ClientOptions mOptions = ClientOptions.INSTANCE;

    /**
     * Creates new form OptionsPanel
     */
    public OptionsPanel() {
        mServerCommander = mManager.getServerCommander();
        initComponents();
        
        if (mServerCommander == null) {
            rsyncFileChooserPanel.setEnabled(false);
        }
        
        load();
    }
    
    void save() {
        if (mManager.isConnected()) {
            try {
                mServerCommander.setRsyncPath(rsyncFileChooserPanel.getPath());
            } catch (RemoteException ex) {
                Logger.getLogger(OptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        mOptions.setForceLookAndFeel(lafForceCheckBox.isSelected());
        mOptions.setLookAndFeel((String) lafComboBox.getSelectedItem());
        mOptions.setDisplayMenuIcons(menuIconsCheckBox.isSelected());
        mOptions.setCustomColors(customColorsCheckBox.isSelected());
    }
    
    private void load() {
        if (mManager.isConnected()) {
            try {
                rsyncFileChooserPanel.setPath(mServerCommander.getRsyncPath());
            } catch (NullPointerException | RemoteException ex) {
                rsyncFileChooserPanel.setEnabled(false);
                Logger.getLogger(OptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        lafForceCheckBox.setSelected(mOptions.isForceLookAndFeel());
        lafComboBox.setModel(SwingHelper.getLookAndFeelComboBoxModel(true));
        lafComboBox.setSelectedItem(mOptions.getLookAndFeel());
        
        lafForceCheckBoxActionPerformed(null);
        menuIconsCheckBox.setSelected(mOptions.isDisplayMenuIcons());
        customColorsCheckBox.setSelected(mOptions.isCustomColors());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rsyncFileChooserPanel = new se.trixon.util.swing.dialogs.FileChooserPanel();
        lafForceCheckBox = new javax.swing.JCheckBox();
        lafLabel = new javax.swing.JLabel();
        lafComboBox = new javax.swing.JComboBox();
        menuIconsCheckBox = new javax.swing.JCheckBox();
        customColorsCheckBox = new javax.swing.JCheckBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("se/trixon/jota/client/ui/Bundle"); // NOI18N
        rsyncFileChooserPanel.setHeader(bundle.getString("OptionsPanel.rsyncFileChooserPanel.header")); // NOI18N

        lafForceCheckBox.setText(bundle.getString("OptionsPanel.lafForceCheckBox.text")); // NOI18N
        lafForceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lafForceCheckBoxActionPerformed(evt);
            }
        });

        lafLabel.setText(Dict.LOOK_AND_FEEL.getString());

        menuIconsCheckBox.setText(bundle.getString("OptionsPanel.menuIconsCheckBox.text")); // NOI18N

        customColorsCheckBox.setText(bundle.getString("OptionsPanel.customColorsCheckBox.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rsyncFileChooserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lafComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lafForceCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                    .addComponent(menuIconsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lafLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(customColorsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rsyncFileChooserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lafForceCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lafLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lafComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuIconsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customColorsCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lafForceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lafForceCheckBoxActionPerformed
        lafComboBox.setEnabled(lafForceCheckBox.isSelected());
        lafLabel.setEnabled(lafForceCheckBox.isSelected());
    }//GEN-LAST:event_lafForceCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox customColorsCheckBox;
    private javax.swing.JComboBox lafComboBox;
    private javax.swing.JCheckBox lafForceCheckBox;
    private javax.swing.JLabel lafLabel;
    private javax.swing.JCheckBox menuIconsCheckBox;
    private se.trixon.util.swing.dialogs.FileChooserPanel rsyncFileChooserPanel;
    // End of variables declaration//GEN-END:variables
}
